---
description:
globs:
alwaysApply: false
---
# EatLock アプリ実装タスク分解書

## プロジェクト概要

**アプリ名:** EatLock  
**目的:** 暴飲暴食を止めさせ、緩和させることでユーザーの健康維持とストレス軽減を支援  
**ターゲット:** 20〜50代の男女で、健康・ダイエット目的の運動を行うが食事制限が難しい、またはストレスで過食傾向にある人

## 技術スタック

- **プラットフォーム:** iOS 17以降
- **UI実装:** SwiftUI
- **AI処理:** Foundation Modelフレームワーク（ローカル推論）
- **データ保存:** SwiftData（暗号化必須）
- **通知:** UNUserNotificationCenter
- **広告:** Google Mobile Ads SDK

## 主要機能要件

1. **行動ログ記録**（フリーテキスト入力）
2. **AIフィードバック**（端末内Foundation Modelで優しく慰め、達成時は定量表示）
3. **可視化ダッシュボード**（記録回数・防いだカロリー数・継続日数の3指標）
4. **ログ履歴一覧**（タイムスタンプ＋テキストプレビュー、タップで詳細モーダル）
5. **習慣化サポート**（アニメーション、チュートリアル）
6. **広告バナー**（画面最下部常設）

## 非機能要件

- ユーザー登録不要（匿名利用）
- ローカル完結AI処理（外部送信なし）
- オフライン対応
- プライバシー保護（端末内暗号化保存）

## UI構成（MVP）

```
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ タイトルバー：ロゴ＋日付              ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
┏━━━━┳━━━━━━━━━━━━┳━━━━┓
┃ 記録回数 ┃ 防いだカロリー数 ┃ 継続日数 ┃
┗━━━━┻━━━━━━━━━━━━┻━━━━┛
─────────────────────────────────────
［行動ログ一覧］
・2025/06/25 22:10 "夜中にアイスを…"
・2025/06/24 19:05 "お昼にデザート我慢…"
…
─────────────────────────────────────
┌───────────────────────────────┐
│ テキスト入力欄（placeholder：       │
│ "今日の行動を入力…"）＋送信アイコン │
└───────────────────────────────┘
[広告バナー]
```

## 実装タスク分解（12タスク）

### **フェーズ1: 基盤構築**

#### **タスク1: データモデル設計・実装**
- **目標:** SwiftDataを使用した行動ログエンティティの作成
- **作業内容:**
  - 行動ログデータモデルの設計
  - SwiftDataエンティティの実装
  - データ暗号化設定
  - 基本的なCRUD操作の実装
- **PR規模:** ~200行
- **成果物:** データモデルファイル、データベース設定

#### **タスク2: 基本UI構造の構築**
- **目標:** メインビューの骨格とタイトルバーの実装
- **作業内容:**
  - メインビューの骨格作成
  - タイトルバー（ロゴ+日付）の実装
  - レイアウト基盤の構築
- **PR規模:** ~300行
- **成果物:** メインビューファイル、UI基盤コンポーネント

#### **タスク3: ナビゲーション構造の設定**
- **目標:** モーダル表示機能と画面遷移の基盤構築
- **作業内容:**
  - モーダル表示機能の実装
  - 画面遷移の基盤構築
  - ナビゲーション管理システム
- **PR規模:** ~250行
- **成果物:** ナビゲーション管理ファイル

### **フェーズ2: コア機能実装**

#### **タスク4: 行動ログ記録機能**
- **目標:** 下部固定テキスト入力欄と送信機能の実装
- **作業内容:**
  - 下部固定テキスト入力欄の実装
  - 送信アイコンとアニメーション
  - ログデータの保存処理
  - 入力バリデーション
- **PR規模:** ~400行
- **成果物:** ログ入力コンポーネント、保存処理

#### **タスク5: ダッシュボード表示機能**
- **目標:** 3つの指標カードの表示と統計計算
- **作業内容:**
  - 3つの指標カード（記録回数・防いだカロリー・継続日数）
  - 統計データの計算ロジック
  - カードデザインの実装
  - データ更新の仕組み
- **PR規模:** ~450行
- **成果物:** ダッシュボードコンポーネント、統計計算ロジック

#### **タスク6: ログ履歴一覧機能**
- **目標:** タイムスタンプ付きログリストと詳細モーダル
- **作業内容:**
  - タイムスタンプ付きログリストの表示
  - タップでの詳細モーダル表示
  - 日付区切り表示
  - ログの検索・フィルタリング機能
- **PR規模:** ~500行
- **成果物:** ログ一覧コンポーネント、詳細モーダル

### **フェーズ3: AI機能統合**

#### **タスク7: Foundation Model統合**
- **目標:** Foundation Modelフレームワークの設定と基盤構築
- **作業内容:**
  - Foundation Modelフレームワークの設定
  - ローカルAI処理の基盤構築
  - エラーハンドリング
  - AI処理のテスト環境構築
- **PR規模:** ~350行
- **成果物:** AI処理基盤、設定ファイル

#### **タスク8: AIフィードバック機能**
- **目標:** ログに対するAIフィードバック生成と表示
- **作業内容:**
  - ログに対するAIフィードバック生成
  - カロリー計算とメッセージ生成
  - フィードバック表示UI
  - フィードバック履歴管理
- **PR規模:** ~500行
- **成果物:** AIフィードバック機能、フィードバック表示UI

### **フェーズ4: 追加機能**

#### **タスク9: 通知機能実装**
- **目標:** 習慣化サポート通知の実装
- **作業内容:**
  - UNUserNotificationCenterの設定
  - 習慣化サポート通知
  - ユーザー許可管理
  - 通知スケジューリング
- **PR規模:** ~300行
- **成果物:** 通知機能、許可管理システム

#### **タスク10: 広告バナー統合**
- **目標:** Google Mobile Ads SDKの統合
- **作業内容:**
  - Google Mobile Ads SDKの統合
  - 最下部バナー表示
  - 広告表示の最適化
  - 広告収益管理
- **PR規模:** ~250行
- **成果物:** 広告バナーコンポーネント、広告管理システム

### **フェーズ5: 最終調整**

#### **タスク11: UI/UXの最終調整**
- **目標:** インタラクティブ要素とアニメーションの実装
- **作業内容:**
  - プラスボタンのアニメーション
  - 初回チュートリアル
  - インタラクティブ要素の実装
  - アクセシビリティ対応
- **PR規模:** ~400行
- **成果物:** アニメーション、チュートリアル機能

#### **タスク12: テスト・デバッグ**
- **目標:** 各機能の動作検証とパフォーマンス最適化
- **作業内容:**
  - 各機能の動作検証
  - エラーケースの対応
  - パフォーマンス最適化
  - 最終的な品質保証
- **PR規模:** ~300行
- **成果物:** テストコード、バグ修正、最適化

## 実装方針

### PR管理
- 1PRあたりの変更差分: 500行以下を目標
- 各タスクを独立したPRとして管理
- 機能単位でのレビューを実施

### 品質管理
- 各タスク完了後の動作検証
- エラーハンドリングの徹底
- プライバシー保護の確認

### 注意事項
- Foundation Modelフレームワークの利用可能性確認
- SwiftDataでの暗号化実装方法の検証
- 広告SDK統合時のプライバシー配慮

## 次のステップ

**開始タスク:** タスク1（データモデル設計・実装）
**理由:** 他の全機能の基盤となるため

---

**作成日:** 2025年1月25日  
**最終更新:** 2025年1月25日
